DIFF BASED ON COMMIT 54b460a33310c4e759717dc24b5cb296dc2f1f3e

diff --git a/examples/hashing/Makefile b/examples/hashing/Makefile
index a249b43..46019f6 100755
--- a/examples/hashing/Makefile
+++ b/examples/hashing/Makefile
@@ -36,12 +36,15 @@ LD_SCRIPT = gcc.ld
 
 # output folder (absolute or relative path, leave empty for in-tree compilation)
 OUT_DIR = bin
+DIFF_DIR = .diffs
 
 # C++ definitions (e.g. "-Dsymbol_with_value=0xDEAD -Dsymbol_without_value")
 CXX_DEFS =
 
 # C definitions
-C_DEFS = -DCORE_M0
+# MORE BELOW
+# C_DEFS = -DCORE_M0
+C_DEFS = -DCORE_M0 $(BIN_HASH_FLAG)
 
 # ASM definitions
 AS_DEFS = -D__STARTUP_CLEAR_BSS -D__START=main -DRAM_MODE=1
@@ -128,6 +131,12 @@ else
 	OUT_DIR_F = $(strip $(OUT_DIR))/
 endif
 
+ifeq ($(strip $(DIFF_DIR)), )
+	DIFF_DIR_F =
+else
+	DIFF_DIR_F = $(strip $(DIFF_DIR))/
+endif
+
 #=============================================================================#
 # various compilation flags
 #=============================================================================#
@@ -194,6 +203,7 @@ GENERATED = $(wildcard $(patsubst %, $(OUT_DIR_F)*.%, bin d dmp elf hex lss lst
 #=============================================================================#
 
 all : make_output_dir $(ELF) $(LSS) $(DMP) $(HEX) $(BIN) print_size
+all_writeflash : make_output_dir precompile 
 
 # make object files dependent on Makefile
 $(OBJS) : Makefile
@@ -210,6 +220,39 @@ $(ELF) : $(OBJS)
 	@echo ' '
 
 #-----------------------------------------------------------------------------#
+# Computing hash of ELF
+#-----------------------------------------------------------------------------#
+
+precompile_makedir : $(ELF)
+	@echo 'pre-link of target: $(ELF)'
+	$(shell mkdir $(DIFF_DIR_F) 2>/dev/null)
+
+precompile_gethash : precompile_makedir
+	$(eval BIN_HASH = $(shell md5sum bin/*.elf | cut -d ' ' -f 1))
+	$(eval BIN_HASH_FLAG = -D$(BIN_HASH))
+	@echo hash of binary is $(BIN_HASH)
+
+precompile_getlatestcommit : precompile_gethash
+	$(eval LATEST_GIT_COMMIT = $(shell git log | head -1 | cut -d ' ' -f 2))
+	@echo latest git commit is $(LATEST_GIT_COMMIT)
+
+precompile_makeoutfile : precompile_getlatestcommit
+	$(shell echo "DIFF BASED ON COMMIT" $(LATEST_GIT_COMMIT) > $(DIFF_DIR_F)$(BIN_HASH).txt)
+	$(shell echo "" >> $(DIFF_DIR_F)$(BIN_HASH).txt)
+
+precompile_addgitdiffs : precompile_makeoutfile
+	$(shell git diff >> $(DIFF_DIR_F)$(BIN_HASH).txt)
+
+precompile_recompile_with_new_var1 :  precompile_addgitdiffs
+	$(MAKE) clean
+
+precompile_recompile_with_new_var :  precompile_recompile_with_new_var1
+	$(MAKE) $(HEX) BIN_HASH_FLAG=-DHASH=\\\"$(BIN_HASH)\\\"
+
+precompile : precompile_recompile_with_new_var print_size
+	@echo done compiling and feeding in hash!
+
+#-----------------------------------------------------------------------------#
 # compiling - C++ source -> objects
 #-----------------------------------------------------------------------------#
 
@@ -291,7 +334,7 @@ make_output_dir :
 # Write to flash of chip
 #-----------------------------------------------------------------------------#
 
-writeflash: all
+writeflash: all_writeflash
 	@echo "Writing to" $(COMPORT)
 	lpc21isp -NXPARM -control $(HEX) $(COMPORT) $(BAUDRATE) $(CLOCK_OSC)
 
diff --git a/examples/hashing/src/main.c b/examples/hashing/src/main.c
index 57c4d79..a0d2de8 100644
--- a/examples/hashing/src/main.c
+++ b/examples/hashing/src/main.c
@@ -5,11 +5,18 @@
 
 
 #include "chip.h"
+#include <string.h>
 
 const uint32_t OscRateIn = 0;
 
 #define LED0 2,8
 
+#ifndef HASH
+#define HASH ""
+#endif
+
+#define DEBUG_Print(str) Chip_UART_SendBlocking(LPC_USART, str, strlen(str))
+
 volatile uint32_t msTicks;
 
 uint8_t Rx_Buf[8];
@@ -27,12 +34,13 @@ int main(void)
 	Chip_IOCON_PinMuxSet(LPC_IOCON, IOCON_PIO1_7, (IOCON_FUNC1 | IOCON_MODE_INACT));/* TXD */
 
 	Chip_UART_Init(LPC_USART);
-	Chip_UART_SetBaud(LPC_USART, 9600);
+	Chip_UART_SetBaud(LPC_USART, 115200);
 	Chip_UART_ConfigData(LPC_USART, (UART_LCR_WLEN8 | UART_LCR_SBS_1BIT | UART_LCR_PARITY_DIS));
 	Chip_UART_SetupFIFOS(LPC_USART, (UART_FCR_FIFO_EN | UART_FCR_TRG_LEV2));
 	Chip_UART_TXEnable(LPC_USART);
 
-	const uint8_t *string = "Halig World\n\r";
+	const uint8_t *string = "Hello World\n\r";
+	const uint8_t *string2 = ""HASH;
 
 	if (SysTick_Config (SystemCoreClock / 1000)) {
 		//Error
@@ -40,11 +48,12 @@ int main(void)
 	}
 
 	Chip_GPIO_Init(LPC_GPIO);
-    	Chip_GPIO_WriteDirBit(LPC_GPIO, LED0, true);
+    Chip_GPIO_WriteDirBit(LPC_GPIO, LED0, true);
     
 	uint8_t toggle = 0;
 
 	while(1) {
+        DEBUG_Print("HERE");
 		uint8_t count;
 		if ((count = Chip_UART_Read(LPC_USART, Rx_Buf, 8)) != 0) {
 			Chip_UART_SendBlocking(LPC_USART, Rx_Buf, count);
